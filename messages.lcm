package messages;

// Game over message to signal end of game
struct gameover_t {
    int8_t done;        // 1: done, 0: not done
}

// Updates the position of the It and NotIt nodes
struct position_t {
    int32_t node_id;    // node identifier
    int32_t x;          // x coord
    int32_t y;          // y coord
    int8_t is_it;       // 1 if it is an "It" node; 0 for others
}

// Message to freeze to NotIt
struct freeze_t {
    int32_t node_id;
}

// Synchronisation request message
struct sync_request_t {
    int8_t node_type;
    int32_t node_id;    // 0: GameNode; 1: ItNode; 2: NotItNode
}

// Synchronisation confirmation reply message 
struct sync_confirm_t {
    int8_t ready;
}

// Game initialization params
struct game_init_t {
    // Game board dimensions:
    int32_t width;
    int32_t height;

    // Number of NotIt nodes
    int32_t num_not_it;
}

